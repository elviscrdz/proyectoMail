package com.nim.java.projectmail;

import java.awt.Color;
import java.awt.Dimension;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class Mail extends javax.swing.JFrame {

    /**
     * Creates new form Mail
     */
    public Mail() {
        initComponents();
        cargarBaseDatos();
        this.getContentPane().setBackground(Color.white);
    }

    private void copy(String copiar) {
        
        StringSelection selection = new StringSelection(copiar);
        
        Clipboard resultado = Toolkit.getDefaultToolkit().getSystemClipboard();
        
        resultado.setContents(selection, null);
    
    }
    
    private String paste() {
        
        String resultado = "";
        
        Clipboard valor = Toolkit.getDefaultToolkit().getSystemClipboard();
        
        Transferable contenido = valor.getContents(null);
        
        if(contenido.isDataFlavorSupported(DataFlavor.stringFlavor)) {
            try {
                resultado = (String) contenido.getTransferData(DataFlavor.stringFlavor);
            } catch (UnsupportedFlavorException ex) {
                Logger.getLogger(Mail.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Mail.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        return resultado;
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        recibido = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        enviar = new javax.swing.JTextArea();
        checkARB = new javax.swing.JCheckBox();
        checkCPH = new javax.swing.JCheckBox();
        checkCPS = new javax.swing.JCheckBox();
        checkDES = new javax.swing.JCheckBox();
        checkCRB = new javax.swing.JCheckBox();
        pegar = new javax.swing.JButton();
        limpiarTodo = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        limpiarRecibido = new javax.swing.JButton();
        limpiarEnviar = new javax.swing.JButton();
        copiar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        arb = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cph = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        des = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        cps = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        crb = new javax.swing.JTextField();
        botonGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        recibido.setColumns(20);
        recibido.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        recibido.setLineWrap(true);
        recibido.setRows(5);
        recibido.setWrapStyleWord(true);
        jScrollPane3.setViewportView(recibido);

        enviar.setColumns(20);
        enviar.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        enviar.setLineWrap(true);
        enviar.setRows(5);
        enviar.setWrapStyleWord(true);
        jScrollPane4.setViewportView(enviar);

        checkARB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkARB.setText("ARB");
        checkARB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkARBActionPerformed(evt);
            }
        });

        checkCPH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkCPH.setText("CPH");
        checkCPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCPHActionPerformed(evt);
            }
        });

        checkCPS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkCPS.setText("CPS");
        checkCPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCPSActionPerformed(evt);
            }
        });

        checkDES.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkDES.setText("DES");
        checkDES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDESActionPerformed(evt);
            }
        });

        checkCRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkCRB.setText("CRB");
        checkCRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCRBActionPerformed(evt);
            }
        });

        pegar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pegar.setText("Pegar");
        pegar.setToolTipText("");
        pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegarActionPerformed(evt);
            }
        });

        limpiarTodo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        limpiarTodo.setText("Limpiar Todo");
        limpiarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarTodoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Recibido");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Enviar");

        limpiarRecibido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        limpiarRecibido.setText("Limpiar Recibido");
        limpiarRecibido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarRecibidoActionPerformed(evt);
            }
        });

        limpiarEnviar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        limpiarEnviar.setText("Limpiar Enviar");
        limpiarEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarEnviarActionPerformed(evt);
            }
        });

        copiar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        copiar.setText("Copiar");
        copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(pegar)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(copiar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkARB)
                    .addComponent(checkCPH)
                    .addComponent(checkCPS)
                    .addComponent(checkDES)
                    .addComponent(checkCRB)
                    .addComponent(limpiarTodo)
                    .addComponent(limpiarRecibido)
                    .addComponent(limpiarEnviar))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkARB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkCPH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkCPS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkDES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkCRB)
                        .addGap(33, 33, 33)
                        .addComponent(limpiarTodo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiarRecibido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiarEnviar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copiar)
                    .addComponent(pegar))
                .addGap(39, 39, 39))
        );

        jTabbedPane1.addTab("Respuestas", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ARB");

        arb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("CPH");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("DES");

        des.setColumns(20);
        des.setRows(5);
        jScrollPane1.setViewportView(des);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("CPS");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("   CRB");

        crb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crbActionPerformed(evt);
            }
        });

        botonGuardar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonGuardar.setText("Guardar");
        botonGuardar.setName("botonGuardar"); // NOI18N
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonGuardar)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(arb)
                                    .addComponent(cph)
                                    .addComponent(cps)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1037, Short.MAX_VALUE)
                                    .addComponent(crb)
                                    .addComponent(jLabel5))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel1)))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arb, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(cph, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(1, 1, 1)
                .addComponent(cps, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(1, 1, 1)
                .addComponent(crb, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(botonGuardar))
        );

        jTabbedPane1.addTab("Configuracion", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1383, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane1)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arbActionPerformed

    private void crbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_crbActionPerformed

    private void copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarActionPerformed
        // TODO add your handling code here:
        copy(enviar.getText());
    }//GEN-LAST:event_copiarActionPerformed

    private void pegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegarActionPerformed
        // TODO add your handling code here:
        recibido.setText(paste());
    }//GEN-LAST:event_pegarActionPerformed

    private void limpiarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarTodoActionPerformed
        // TODO add your handling code here:
        enviar.setText("");
        recibido.setText("");
        limpiarCheckbox();
        
    }//GEN-LAST:event_limpiarTodoActionPerformed

    private void limpiarRecibidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarRecibidoActionPerformed
        // TODO add your handling code here:
        recibido.setText("");
    }//GEN-LAST:event_limpiarRecibidoActionPerformed

    private void limpiarEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarEnviarActionPerformed
        // TODO add your handling code here:
        enviar.setText("");
        limpiarCheckbox();
    }//GEN-LAST:event_limpiarEnviarActionPerformed

    private void checkARBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkARBActionPerformed
        // TODO add your handling code here:
      /*  if(checkARB.isSelected() == true) {
            //enviar.setText("Este es un ARB!");
        }
        else if(checkARB.isSelected() == false){
            enviar.setText("");
        }*/
      depurarTexto();
    }//GEN-LAST:event_checkARBActionPerformed

    private void checkCPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCPHActionPerformed
        // TODO add your handling code here:
        depurarTexto();
    }//GEN-LAST:event_checkCPHActionPerformed

    private void checkCPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCPSActionPerformed
        // TODO add your handling code here:
        depurarTexto();
    }//GEN-LAST:event_checkCPSActionPerformed

    private void checkDESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDESActionPerformed
        // TODO add your handling code here:
        depurarTexto();
    }//GEN-LAST:event_checkDESActionPerformed

    private void checkCRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCRBActionPerformed
        // TODO add your handling code here:
        depurarTexto();
    }//GEN-LAST:event_checkCRBActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        try {
            guardarBaseDatos();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Mail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                Toolkit pantalla = Toolkit.getDefaultToolkit();
                Dimension tamanioPantalla = pantalla.getScreenSize();

                int altoPantalla = tamanioPantalla.height;
                int anchoPantalla = tamanioPantalla.width;

                //setSize(anchoPantalla / 2, altoPantalla / 2);

                Mail mail = new Mail();
                mail.setTitle("App Mail");

                Image icono = pantalla.getImage("images/mail.png");
                mail.setIconImage(icono);
                
                mail.setLocation(anchoPantalla/4, altoPantalla/4);
                
                mail.setExtendedState(MAXIMIZED_BOTH);
                
                //mail.pack();
                mail.setVisible(true);
                
                //new Mail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arb;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JCheckBox checkARB;
    private javax.swing.JCheckBox checkCPH;
    private javax.swing.JCheckBox checkCPS;
    private javax.swing.JCheckBox checkCRB;
    private javax.swing.JCheckBox checkDES;
    private javax.swing.JButton copiar;
    private javax.swing.JTextField cph;
    private javax.swing.JTextField cps;
    private javax.swing.JTextField crb;
    private javax.swing.JTextArea des;
    private javax.swing.JTextArea enviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton limpiarEnviar;
    private javax.swing.JButton limpiarRecibido;
    private javax.swing.JButton limpiarTodo;
    private javax.swing.JButton pegar;
    private javax.swing.JTextArea recibido;
    // End of variables declaration//GEN-END:variables

public void depurarTexto(){
    enviar.setText("");
    if (checkARB.isSelected()){
        enviar.append(arb.getText()+"\n");
    }
    if(checkCPH.isSelected()){
        enviar.append(cph.getText()+"\n");
    }
    if(checkCPS.isSelected()){
        enviar.append(cps.getText()+"\n");
    }
    if(checkDES.isSelected()){
        enviar.append(des.getText()+"\n");
    }
    if (checkCRB.isSelected()){
        enviar.append(crb.getText()+"\n");
    }
}
public void limpiarCheckbox(){
    checkARB.setSelected(false);
    checkCPH.setSelected(false);
    checkCPS.setSelected(false);
    checkDES.setSelected(false);
    checkCRB.setSelected(false);
}
public void cargarBaseDatos(){
    
    try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/banco1","root","");
        Statement sentencia = conexion.createStatement(); 
        ResultSet registro = sentencia.executeQuery ("select * from principal");
        while (registro.next()) 
{     
    arb.setText(registro.getString(1));
    cph.setText(registro.getString(2));
    cps.setText(registro.getString(3));
    des.setText(registro.getString(4));
    crb.setText(registro.getString(5));
}
    }catch(Exception e){
        e.printStackTrace();
    }
}
public void guardarBaseDatos() throws ClassNotFoundException{
    try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conexion=DriverManager.getConnection("jdbc:mysql://localhost:3306/banco1", "root", "");
            //Statement sentencia=conexion.createStatement();
            PreparedStatement sentencia=conexion.prepareStatement("UPDATE PRINCIPAL SET ARB =?, CPH=?, CPS=?, DES=?, CRB=? WHERE NUMERO=1");
            //ResultSetMetaData metaDatos=resultado.getMetaData();
            //while(resultado.next()){
                sentencia.setString(1, arb.getText());
                sentencia.setString(2, cph.getText());
                sentencia.setString(3, cps.getText());
                sentencia.setString(4, des.getText());
                sentencia.setString(5, crb.getText());
                //persona.nombres=resultado.getString(2);
            //}
            sentencia.executeUpdate();
            sentencia.close();
            conexion.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
}

}
